<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="installation-und-versionsauswahl" xml:lang="de"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title xml:id="installation-und-versionsauswahl.title">Versionsauswahl und
  Installation</title>

  <info>
    <collab>
      <person>
        <personname><firstname>Philipp</firstname><surname>Kempgen</surname></personname>
      </person>
    </collab>
  </info>

  <section xml:id="welche-ruby-version">
    <title xml:id="welche-ruby-version.title">Ruby 1.8.x oder Ruby
    1.9.2?</title>

    <indexterm>
      <primary>Version</primary>

      <secondary>Ruby</secondary>
    </indexterm>

    <para>Einfache und wichtige Antwort: <emphasis>Ruby
    1.9.2!!!</emphasis></para>

    <para>Alle Bücher und Dokumentationen, die Sie bis jetzt gesehen haben
    funktionierten auch mit Ruby 1.8.x. Warum also in alles in der Welt machen
    wir jetzt so ein Bohei und nehmen nicht einfach Ruby 1.8.x &#8211; was mit
    etwas Glück sogar schon auf Ihrem System installiert ist? So groß ist der
    Unterschied zwischen 1.9.2 und 1.8.x rein <quote>mathematisch</quote>
    gesehen ja gar nicht (die Zahl 1,9 ist zu 1,8 nur rund 5 % höher)?!</para>

    <para>Hier die Antworten:<itemizedlist>
        <listitem>
          <para>Der Unterschied zwischen Ruby 1.9.2 und Ruby 1.8.x ist
          gigantisch. Lassen Sie sich durch die reine Versionszahl nicht
          beirren. Um mal das einfachste Argument rauszunehmen: Ruby 1.9.2 ist
          viel performanter als Ruby 1.8.x. Was heißt <quote>viel</quote>? Je
          nach Benchmark zwischen 2- und 4-mal so schnell (in Einzelbereichen
          sogar Faktor 10 und mehr).</para>
        </listitem>

        <listitem>
          <para>Die meisten Autoren sind schlicht und ergreifend zu faul, um
          ihre Doku auf 1.9.2 upzugraden. Die Neu-Installation ist auch nicht
          immer trivial (aus diesem Grunde setzen wir für den Schnelleinstieg
          auf einen virtuellen PC mit einem frischen Betriebssystem).</para>
        </listitem>

        <listitem>
          <para>Viele Rails-Autoren kommen aus dem englischsprachigen Raum und
          da kommt man mit Ruby 1.8.x und US-ASCII ganz gut zurecht. Für alle
          anderen Sprachen sieht es aber schlechter aus. Erst mit der Version
          1.9.2 gibt es eine gute Multi-Encoding-Umgebung. Man muss sogar
          sagen, dass Ruby 1.9.2 so ziemlich jeder anderen Programmiersprache
          diesbezüglich davonrennt.<footnote>
              <para>Der mäßige Umgang mit UTF-8 und Co. in Ruby 1.8 ist fast
              schon ironisch. Schließlich ist der Erfinder von Ruby (Yukihiro
              Matsumoto a.k.a. Matz) ein Japaner, und da sollte man davon
              ausgehen, dass nicht nur ASCII unterstützt wird. Der Grund für
              die späte Implementierung waren allerdings die arrogante Art der
              Entwicklung von UTF-8 bzw. UTF-16. Die entsprechenden Gremien
              sahen sich am Anfang nicht veranlasst mal einen tieferen Blick
              in die asiatische Schriftkultur zu werfen. Deshalb war der erste
              Wurf für europäische Schriften OK, aber für den asiatischen
              Kulturraum ein Witz. Es wurde nachgebessert und entsprechend zog
              auch Ruby nach. Die Multi-Encoding-Unterstützung in Ruby 1.9 ist
              dann auch so gut, dass man auf andere Programmiersprachen mit
              Mitleid herabblickt.</para>
            </footnote></para>
        </listitem>
      </itemizedlist></para>
  </section>

  <section xml:id="welche-rails-version">
    <title xml:id="welche-rails-version.title">Rails 2.3.x oder 3.0.x?</title>

    <indexterm>
      <primary>Version</primary>

      <secondary>Rails</secondary>
    </indexterm>

    <para>Rails 2.3.x ist nicht mehr zeitgemäß! Tun Sie sich das gar nicht
    erst an. Wenn Sie ein Buch zu Rails 2.3.x suchen, dann müssen Sie noch mal
    kurz bei Amazon reinschauen. Dieses hier wird Ihnen nur mit 3.0.x
    helfen.</para>

    <important>
      <para>Eine Programmiersprache wie Ruby und ein Framework wie Rails
      verändern sich fortlaufend. Schauen Sie deshalb bitte regelmäßig auf
      <uri
      xlink:href="http://www.ruby-auf-schienen.de">http://www.ruby-auf-schienen.de</uri>
      nach. Dort werde ich aktuelle Infos und ggf. Kapitelupdates
      veröffentlichen.</para>
    </important>
  </section>

  <section version="5.0" xml:id="rails3-install-osx">
    <title xml:id="rails3-install-osx.title">Installation von Ruby on Rails
    3.0 mit RVM auf Mac OS X 10.6</title>

    <indexterm>
      <primary>Installation von Ruby on Rails</primary>

      <secondary>Mac OS X 10.6</secondary>
    </indexterm>

    <indexterm>
      <primary>Mac OS X 10.6</primary>

      <secondary>Installation von Ruby on Rails</secondary>
    </indexterm>

    <para>Die Anzahl der Ruby-on-Rails-Entwickler die auf Mac OS X entwickeln
    ist erfreulich hoch. Auf Rails-Konferenzen sieht man bei gefühlten 70 %
    der Teilnehmer ein MacBook.</para>

    <para>Mac OS 10.6 wird standardmäßig schon mit Ruby und Ruby on Rails
    ausgeliefert. Dummerweise nur mit der Ruby-Version 1.8.7 und mit der
    Rails-Version 2.3.5. Beides ist für uns uninteressant. Wir wollen ein
    1.9.2er Ruby und ein 3.0er Rails. Um die bestehende Ruby- und
    Rails-Installation und damit das Paketmanagement von Mac OS X nicht zu
    beeinflussen, installieren wir Ruby 1.9.2 und Rails 3.0 mit <indexterm>
        <primary>RVM</primary>
      </indexterm><indexterm>
        <primary>Ruby Version Manager</primary>
      </indexterm>RVM (Ruby Version Manager). Infos zu RVM finden Sie auf der
    RVM-Homepage unter <uri
    xlink:href="http://rvm.beginrescueend.com/">http://rvm.beginrescueend.com/</uri>.</para>

    <para>Mit RVM können Sie als normaler Benutzer (also ohne Root-Rechte und
    in Ihrem Home-Verzeichnis) beliebig viele verschiedene Ruby-
    und-Rails-Versionen installieren und laufen lassen. So können Sie parallel
    an alten Projekten die vielleicht noch Ruby 1.8.7 benutzen und an neuen
    Projekten die Ruby 1.9.2 benutzen arbeiten.</para>

    <section xml:id="xcode-install">
      <title xml:id="xcode-install.title">Xcode-Installation bzw.
      -Upgrade</title>

      <indexterm>
        <primary>Xcode</primary>
      </indexterm>

      <para>Bevor Sie mit der Installation von Ruby on Rails anfangen müssen
      Sie auf Ihrem System die <emphasis>neuesten</emphasis> Xcode-Tools von
      Apple installieren. Das DVD-Image ist gut 750 MB groß und kann unter
      folgender URL heruntergeladen werden:</para>

      <para><uri
      xlink:href="http://developer.apple.com/technology/xcode.html">http://developer.apple.com/technology/xcode.html</uri></para>

      <important>
        <para>Zur Installation von Xcode benötigen Sie Admin-Rechte auf Ihrem
        System.</para>
      </important>
    </section>

    <section xml:id="ruby-1.9.2-mit-rvm-macosx">
      <title xml:id="ruby-1.9.2-mit-rvm-macosx.title">Ruby 1.9.2 mit RVM
      installieren</title>

      <para>Öffnen Sie bitte mit Ihren normalen User-Rechten ein Terminal und
      überprüfen Sie die installierte Ruby-Version:<screen>MacBook:~ xyz$ <command>ruby -v</command>
ruby 1.8.7 (2009-06-12 patchlevel 174) [universal-darwin10.0]
</screen></para>

      <para>RVM lässt sich auf verschiedene Wege installieren. Ich empfehle
      das folgende Monsterkommando, weil damit das aktuellste stabile RVM
      installiert wird:<screen>MacBook:~ xyz$ <command>bash &lt; &lt;( curl http://rvm.beginrescueend.com/releases/rvm-install-head )</command>

  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
121   364  121   364    0     0    922      0 --:--:-- --:--:-- --:--:--  1967

Initialized empty Git repository in /Users/xyz/.rvm/src/rvm/.git/
remote: Counting objects: 13224, done.
remote: Compressing objects: 100% (3246/3246), done.
remote: Total 13224 (delta 8709), reused 13116 (delta 8638)
Receiving objects: 100% (13224/13224), 2.34 MiB | 212 KiB/s, done.
Resolving deltas: 100% (8709/8709), done.

RVM:   shell scripts which allow management of multiple ruby interpreters and environments.
RTFM:  http://rvm.beginrescueend.com/
HELP:  http://webchat.freenode.net/?channels=rvm (#rvm on irc.freenode.net)

* Installing rvm to /Users/xyz/.rvm/
    Correct permissions for base binaries in /Users/xyz/.rvm/bin...
    Copying manpages into place.

Notes for Darwin ( Mac OS X ) 

    *  For Snow Leopard be sure to have XCode Tools Version 3.2.1 (1613) or later (there were bugs with the dvd release version).
    *  You should download the latest XCode tools from developer.apple.com. This is necessary since the dvd install for Snow Leopard has bugs.
    *  If you intend on installing MacRuby you must install LLVM first.
    *  If you intend on installing JRuby you must install the JDK.
    *  If you intend on installing IronRuby you must install Mono (version 2.6 or greater is recommended).


xyz,

Thank you for using rvm. I hope that it makes your work easier and more enjoyable.
If you have any questions, issues and/or ideas for improvement please hop in #rvm on irc.freenode.net and let me know.
My irc nickname is 'wayneeseguin' and I hang out from ~09:00-17:00EST and again from ~21:00EST-~00:00EST.
If I do not respond right away, please hang around after asking your question, I will respond as soon as I am back.
Be sure to get head often as rvm development happens fast, you can do this by running 'rvm update --head'.
  w⦿‿⦿t!
    ~ Wayne

You must now finish the install manually:
1) Place the folowing line at the end of your shell's loading files(.bashrc or .bash_profile for bash and .zshrc for zsh), after all path/variable settings:
     [[ -s $HOME/.rvm/scripts/rvm ]] &amp;&amp; source $HOME/.rvm/scripts/rvm
   Please note that this must only occur once - so, you only need to add it the first time you install rvm.
2) Ensure that there is no 'return' from inside the .bashrc file. (otherwise rvm will be prevented from working properly).
   This means that if you see '[ -z "$PS1" ] &amp;&amp; return' then you must change this line to:
   if [[ -n "$PS1" ]] ; then
     ... original content that was below the &amp;&amp; return line ...
   fi # &lt;= be sure to close the if.
   #EOF .bashrc
   Be absolutely *sure* to REMOVE the '&amp;&amp; return'.
   If you wish to DRY up your config you can 'source ~/.bashrc' at the bottom of your .bash_profile.
   placing all non-interactive items in the .bashrc, including the 'source' line above
3) Then CLOSE THIS SHELL and open a new one in order to use rvm.

Installation of RVM to /Users/xyz/.rvm/ is complete.
</screen></para>

      <note>
        <para>Das obige Kommando zieht RVM per Git. Das ist schnell,
        funktioniert aber nicht hinter jeder Firewall. Sollten Sie hinter
        einer solchen Firewall sitzen, dann müssen Sie <uri
        xlink:href="http://rvm.beginrescueend.com/releases/rvm-install-head">http://rvm.beginrescueend.com/releases/rvm-install-head</uri>
        von Hand herunterladen und darin mit einem Editor alle
        <literal>git://</literal>-URIs auf <literal>http://</literal> ändern.
        Danach normal als Shell-Script aufrufen.</para>
      </note>

      <para>RVM ist jetzt fertig installiert, aber Sie müssen zum täglichen
      Gebrauch noch das Setzen einiger Grundparameter beim Starten einer neuen
      Shell in Ihre <filename>.bash_profile</filename> einfügen: <note>
          <para>Falls Sie eine andere Shell als die Bash-Shell benutzen,
          müssen Sie in der dann entsprechenden Datei diese Veränderung
          vornehmen. Bitte lesen Sie dazu die Ausgabe des
          RVM-Installers.</para>
        </note></para>

      <para><screen>MacBook:~ xyz$ <command>echo '[[ -s $HOME/.rvm/scripts/rvm ]] &amp;&amp; source $HOME/.rvm/scripts/rvm' &gt;&gt; .bash_profile</command>
</screen></para>

      <important>
        <para>Jetzt müssen Sie das Terminal schließen und ein neues Terminal
        öffnen (ansonsten wirkt die Veränderung von eben noch nicht).</para>
      </important>

      <para>Zum Testen ob <literal>rvm</literal> richtig installiert ist rufen
      wir es einmal mit <literal>-v</literal> auf.<screen>MacBook:~ xyz$ <command>rvm -v</command>

rvm 1.0.1 by Wayne E. Seguin (wayneeseguin@gmail.com) [http://rvm.beginrescueend.com/]
</screen></para>

      <para>Sollte hierbei als Antwort der Bash <quote><literal>command not
      found</literal></quote> ausgegeben worden sein, müssen Sie die obigen
      Schritte noch einmal überprüfen. Wahrscheinlich haben Sie einen Schritt
      ausgelassen.</para>

      <para>Mit <application>rvm</application> können Sie im neuen Terminal
      Ruby 1.9.2 installieren:<screen>MacBook:~ xyz$ <command>rvm install ruby-1.9.2</command>

info: Installing Ruby from source to: /Users/xyz/.rvm/rubies/ruby-1.9.2-p0

info: Downloading ruby-1.9.2-p0, this may take a while depending on your connection...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 8296k  100 8296k    0     0  61062      0  0:02:19  0:02:19 --:--:-- 40501

info: Extracting ruby-1.9.2-p0 ...
info: Configuring ruby-1.9.2-p0, this may take a while depending on your cpu(s)...
info: Compiling ruby-1.9.2-p0, this may take a while depending on your cpu(s)...
info: Installing ruby-1.9.2-p0
info: Installation of ruby-1.9.2-p0 is complete.
info: Updating rubygems for /Users/xyz/.rvm/gems/ruby-1.9.2-p0@global
info: Updating rubygems for /Users/xyz/.rvm/gems/ruby-1.9.2-p0
info: adjusting shebangs for ruby-1.9.2-p0 (gem irb erb ri rdoc testrb rake).
info: Importing initial gems...
MacBook:~ xyz$ </screen></para>

      <para>Noch werden Sie per Default das auf OS X mitgelieferte 1.8er Ruby
      aufrufen. Das lässt sich leicht mit <command>ruby -v</command>
      rausfinden.<screen>MacBook:~ xyz$ <command>ruby -v</command>
ruby 1.8.7 (2009-06-12 patchlevel 174) [universal-darwin10.0]
</screen></para>

      <para>Mit dem Befehl <command>rvm 1.9.2</command> können Sie aber auf
      ein 1.9.2er Ruby wechseln.<screen>MacBook:~ xyz$ <command>rvm 1.9.2</command>
MacBook:~ xyz$ <command>ruby -v</command>
ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-darwin10.4.0]
</screen></para>

      <para>Um das nicht bei jedem Einloggen neu eingeben zu müssen, können
      Sie Ruby 1.9.2 auch als Default einstellen:</para>

      <para><screen>MacBook:~ xyz$ <command>rvm --default 1.9.2</command>
</screen></para>

      <para>Jetzt haben wir auf unserem Mac OS X 10.6 mit
      <application>rvm</application> ein aktuelles Ruby 1.9.2 installiert und
      können mit dem Programm <literal>rvm</literal> zwischen den beiden
      Versionen hin- und herschalten. Für den Rest des Buches gehe ich immer
      von der Version 1.9.2 aus.</para>

      <note>
        <para>Mit dem Befehl <command>rvm system</command> können Sie auch
        jederzeit wieder auf die System-Ruby-Version 1.8.x zurückschalten.
        Geben Sie einfach <command>rvm</command> ein, um eine entsprechende
        Hilfe-Seite angezeigt zu bekommen.</para>
      </note>
    </section>

    <section xml:id="rails3-gem-install-macosx">
      <title xml:id="rails3-gem-install-macosx.title">Rails 3.0
      installieren</title>

      <para>Zuerst überprüfen wir, ob ein Ruby in der Version 1.9.2 aufgerufen
      wird. Falls dies nicht der Fall sein sollte, lesen Sie sich bitte <xref
      linkend="ruby-1.9.2-mit-rvm-macosx" /> durch.<screen>MacBook:~ xyz$ <command>ruby -v</command>
ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-darwin10.4.0]
</screen></para>

      <para>Als nächstes stellen wir sicher, dass das
      <application>gem</application>-Paketmanagement aktuell ist:<screen>MacBook:~ xyz$ <command>gem update --system</command>
Updating RubyGems
Nothing to update

MacBook:~ xyz$ <command>gem update</command>
Updating installed gems
Updating bundler
Successfully installed bundler-1.0.0
Gems updated: bundler
Installing ri documentation for bundler-1.0.0...
Installing RDoc documentation for bundler-1.0.0...
</screen></para>

      <para>Der Rest ist einfach:<screen>MacBook:~ xyz$ <command>gem install rails --version 3.0.0</command>
Successfully installed railties-3.0.0
Successfully installed rails-3.0.0
2 gems installed
Installing ri documentation for railties-3.0.0...
Installing ri documentation for rails-3.0.0...
Installing RDoc documentation for railties-3.0.0...
Installing RDoc documentation for rails-3.0.0...
</screen></para>

      <para>Perfekt. Jetzt haben Sie Rails 3.0 installiert. <screen>MacBook:~ xyz$ <command>rails -v</command>
Rails 3.0.0
</screen></para>
    </section>

    <section>
      <title xml:id="macosx-install-danach">Und jetzt?</title>

      <para>Wenn Sie noch nie mit Ruby gearbeitet haben, sollten Sie als
      nächstes <xref linkend="ruby-grundlagen" /> lesen. Wenn Sie schon
      Ruby-Meister sind und sich neu mit Rails beschäftigen wollen, dann
      empfehle ich Ihnen die Lektüre von <xref
      linkend="erste_schritte_mit_rails" />.</para>
    </section>
  </section>

  <section version="5.0" xml:id="rails3-install-debian">
    <title xml:id="rails3-install-debian.title">Installation von Ruby on Rails
    3.0 mit RVM auf Debian 5.0</title>

    <indexterm>
      <primary>Installation von Ruby on Rails</primary>

      <secondary>Debian 5.0</secondary>
    </indexterm>

    <indexterm>
      <primary>Debian 5.0</primary>

      <secondary>Installation von Ruby on Rails</secondary>
    </indexterm>

    <para>Es gibt zwei Hauptgründe ein Ruby-on-Rails-System mit <indexterm>
        <primary>RVM</primary>
      </indexterm><indexterm>
        <primary>Ruby Version Manager</primary>
      </indexterm>RVM (Ruby Version Manager) zu installieren:<itemizedlist>
        <listitem>
          <para>Man hat schlicht und ergreifend keine Root-Rechte auf dem
          System. Dann geht es nicht anders.</para>
        </listitem>

        <listitem>
          <para>Man möchte mehrere und sauber von einander abgetrennte
          Rails-Systeme und damit vielleicht Rails-Versionen betreiben. Das
          lässt sich mit RVM und verschiedenen Accounts auf dem Linux-System
          sehr gut realisieren. So können Sie auf einem Rechner ein Ruby 1.8.7
          mit einem Rails 2.3.8 und parallel ein Ruby 1.9.2 mit einem Rails
          3.0 betreiben.</para>
        </listitem>

        <listitem>
          <para>RVM ist einfach super praktisch!</para>
        </listitem>
      </itemizedlist></para>

    <para>Detaillierte Infos zu RVM finden Sie auf der RVM-Homepage unter <uri
    xlink:href="http://rvm.beginrescueend.com/">http://rvm.beginrescueend.com/</uri>.</para>

    <note>
      <para>Diese Beschreibung setzt ein frisch installiertes Debian GNU/Linux
      5.0 (<quote>Lenny</quote>) voraus. Ein ISO-Image für die Installation
      finden Sie auf <uri
      xlink:href="http://www.debian.org/releases/lenny/debian-installer/">http://www.debian.org/releases/lenny/debian-installer/</uri>.
      Ich empfehle das etwa 160 MByte große Netzinstallations-CD-Image. Eine
      Debian-GNU/Linux-Installationsanleitung findet sich unter <uri
      xlink:href="http://www.debian.org/releases/lenny/i386/">http://www.debian.org/releases/lenny/i386/</uri>.
      Ein allgemeines Anwenderhandbuch finden Sie unter <uri
      xlink:href="http://debiananwenderhandbuch.de">http://debiananwenderhandbuch.de</uri>.</para>
    </note>

    <section xml:id="rails3-debian5-install-vorbereitung">
      <title
      xml:id="rails3-debian5-install-vorbereitung.title">Vorbereitungen</title>

      <para>Wenn Sie auf dem Zielsystem Root-Rechte besitzen, dann können Sie
      mit folgendem Befehl sichergehen, dass alle notwendigen Programme für
      eine erfolgreiche Installation von RVM bereitstehen. Falls Sie keine
      Root-Rechte besitzen müssen Sie entweder hoffen, dass Ihr Admin bereits
      alles so installiert hat oder ihm die entsprechende Zeile kurz
      mailen.</para>

      <para>Als erstes ein Update der Paketlisten:</para>

      <para><screen>debian:~# <command>aptitude update</command>
Schreibe erweiterte Statusinformationen... Fertig
Hole:1 http://security.debian.org lenny/updates Release.gpg [835B]
Ign http://security.debian.org lenny/updates/main Translation-de
Hole:2 http://volatile.debian.org lenny/volatile Release.gpg [481B]
<replaceable>[...]</replaceable>
12,5MB wurden in 38s heruntergeladen (327kB/s)
Paketlisten werden gelesen... Fertig

Aktueller Status: 14 Aktualisierungen [+14], 6 Neue [+6].
debian:~# </screen></para>

      <para>Und jetzt die Installation der benötigten Pakete:<screen>debian:~# <command>aptitude -y install curl ruby ruby-dev \
  git-core rake build-essential make zlib1g-dev libssl-dev \
  libreadline5-dev libxml2-dev</command>
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut
Lese Status-Informationen ein... Fertig
Lese erweiterte Statusinformationen
Initialisiere Paketstatus... Fertig
<replaceable>[...]</replaceable>
Richte g++ ein (4:4.3.2-2) ...
Richte build-essential ein (11.4) ...
<replaceable>[...]</replaceable>

Aktueller Status: 11 Aktualisierungen [-3].
debian:~# </screen></para>

      <para>Zum Schluss wird es aber noch mal etwas wilder. Wir brauchen für
      Rails 3 eine neuere Version von SQLite als die die auf Debian 5 per
      Default installiert ist. Ich erspare Ihnen jetzt die Erklärung wie man
      sowohl aus Debian <quote>testing</quote> und aus <quote>unstable</quote>
      parallel installiert. Im Zweifelsfall einfach per Copy-and-Paste
      übernehmen:<screen>debian:~# <command>echo 'deb http://ftp.de.debian.org/debian unstable main' &gt;&gt; /etc/apt/sources.list</command>
debian:~# <command>LANG="C"</command>
debian:~# <command>aptitude update</command>
Hit http://security.debian.org lenny/updates Release.gpg
Hit http://volatile.debian.org lenny/volatile Release.gpg
Hit http://volatile.debian.org lenny/volatile Release
<replaceable>[...]</replaceable>
Hit http://ftp.de.debian.org unstable/main Packages/DiffIndex
Hit http://ftp.de.debian.org lenny/main Packages
Hit http://ftp.de.debian.org lenny/main Sources
Reading package lists... Done
debian:~# <command>aptitude -y -t unstable install sqlite3 libsqlite3-dev</command>
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
  libncurses5 libncurses5-dev libreadline6 libsqlite3-0 ncurses-bin
<replaceable>[...]</replaceable>
Setting up libsqlite3-0 (3.7.2-1) ...
Setting up sqlite3 (3.7.2-1) ...
debian:~# </screen></para>
    </section>

    <section xml:id="ruby-1.9.2-mit-rvm-debian5">
      <title xml:id="ruby-1.9.2-mit-rvm-debian5.title">Ruby 1.9.2 mit RVM
      installieren</title>

      <para>Loggen Sie sich mit Ihrem normalen User-Account ein (in unserem
      Falle ist des der User <literal>xyz</literal>) und öffnen Sie ein
      Terminal. Danach überprüfen Sie, ob bereits eine Ruby-Version
      installiert ist:<screen>xyz@debian:~$ <command>ruby -v</command>
ruby 1.8.7 (2008-08-11 patchlevel 72) [i486-linux]
</screen></para>

      <para>Sollten Sie noch keine Ruby-Version installiert haben, so wenden
      Sie sich bitte an Ihren Admin (siehe <xref
      linkend="rails3-debian5-install-vorbereitung" />).</para>

      <para>RVM lässt sich auf verschiedene Wege installieren. Ich empfehle
      das folgende Monsterkommando, weil damit das aktuellste stabile RVM
      installiert wird:<screen>xyz@debian:~$ <command>bash &lt; &lt;( curl http://rvm.beginrescueend.com/releases/rvm-install-head )</command>

  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   364  100   364    0     0     33      0  0:00:11  0:00:10  0:00:01  118k

Initialized empty Git repository in /home/xyz/.rvm/src/rvm/.git/
remote: Counting objects: 13224, done.
remote: Compressing objects: 100% (3246/3246), done.
remote: Total 13224 (delta 8709), reused 13116 (delta 8638)
Receiving objects: 100% (13224/13224), 2.34 MiB | 211 KiB/s, done.
Resolving deltas: 100% (8709/8709), done.

RVM:   shell scripts which allow management of multiple ruby interpreters and environments.
RTFM:  http://rvm.beginrescueend.com/
HELP:  http://webchat.freenode.net/?channels=rvm (#rvm on irc.freenode.net)

* Installing rvm to /home/xyz/.rvm/
    Correct permissions for base binaries in /home/xyz/.rvm/bin...
    Copying manpages into place.cat: /etc/*-release: Datei oder Verzeichnis nicht gefunden


Notes for Linux (  )

    *  NOTE: MRI stands for Matz's Ruby Interpreter (1.8.X, 1.9.X), ree stands for Ruby Enterprise Edition and rbx stands for Rubinius.

    *  curl is required.

    *  patch is required (for ree, some ruby head's).

    *  If you wish to install rbx and/or any MRI head (eg. 1.9.2-head) then you must install and use rvm 1.8.7 first.

    *  For JRuby (if you wish to use it) you will need:
       $ aptitude install curl sun-java6-bin sun-java6-jre sun-java6-jdk
    *  For MRI &amp; ree (if you wish to use it) you will need (depending on what you are installing):
       $ aptitude install build-essential bison openssl libreadline5 libreadline-dev curl git-core zlib1g zlib1g-dev libssl-dev vim libsqlite3-0 libsqlite3-dev sqlite3 libreadline-dev libxml2-dev git-core subversion autoconf
    *  For IronRuby (if you wish to use it) you will need:
       $ aptitude install curl mono-2.0-devel


xyz,

Thank you for using rvm. I hope that it makes your work easier and more enjoyable.
If you have any questions, issues and/or ideas for improvement please hop in #rvm on irc.freenode.net and let me know.
My irc nickname is 'wayneeseguin' and I hang out from ~09:00-17:00EST and again from ~21:00EST-~00:00EST.
If I do not respond right away, please hang around after asking your question, I will respond as soon as I am back.
Be sure to get head often as rvm development happens fast, you can do this by running 'rvm update --head'.
  w⦿‿⦿t!
    ~ Wayne

You must now finish the install manually:
1) Place the folowing line at the end of your shell's loading files(.bashrc or .bash_profile for bash and .zshrc for zsh), after all path/variable settings:
     [[ -s $HOME/.rvm/scripts/rvm ]] &amp;&amp; source $HOME/.rvm/scripts/rvm
   Please note that this must only occur once - so, you only need to add it the first time you install rvm.
2) Ensure that there is no 'return' from inside the .bashrc file. (otherwise rvm will be prevented from working properly).
   This means that if you see '[ -z "$PS1" ] &amp;&amp; return' then you must change this line to:
   if [[ -n "$PS1" ]] ; then
     ... original content that was below the &amp;&amp; return line ...
   fi # &lt;= be sure to close the if.
   #EOF .bashrc
   Be absolutely *sure* to REMOVE the '&amp;&amp; return'.
   If you wish to DRY up your config you can 'source ~/.bashrc' at the bottom of your .bash_profile.
   placing all non-interactive items in the .bashrc, including the 'source' line above
3) Then CLOSE THIS SHELL and open a new one in order to use rvm.


WARNING:  you have a 'return' statement in your .bashrc, likely this will cause untold havoc.
   This means that if you see '[ -z "$PS1" ] &amp;&amp; return' then you must change this line to:
   if [[ -n "$PS1" ]] ; then
     ... original content that was below the &amp;&amp; return line ...
   fi # &lt;= be sure to close the if.
   #EOF .bashrc
Even if you use zsh you should still adjust the .bashrc as above.
If you have any questions about this please visit #rvm on irc.freenode.net.

Installation of RVM to /home/xyz/.rvm/ is complete.

xyz@debian:~$ </screen></para>

      <para>RVM ist jetzt fertig installiert, aber Sie müssen zum täglichen
      Gebrauch noch die beim Starten Ihrer Bash eingelesene
      <filename>.bashrc</filename> so verändern, dass <literal>rvm</literal>
      immer automatisch konfiguriert wird. Das ist jetzt etwas hakelig, weil
      Sie dafür Elemente aus der Ausgabe von eben wieder verwenden müssen und
      diese bei jeder Installation angepasst werden.</para>

      <para>Jetzt gibt es zwei Möglichkeiten: Entweder Sie habe eine ganz
      normale Debian-Installation und eine <filename>.bashrc</filename>
      Default-Datei oder eben nicht. Die folgenden Zeilen funktionieren nur
      bei den Default-Dateien. Sie sind also eine 80-%- oder 90-%-Lösung. Wenn
      Sie ein stark <quote>optimiertes</quote> System haben, müssen Sie oben
      in der Ausgabe des RVM-Installers unter <quote><literal>You must now
      finish the install manually:</literal></quote> nachlesen, was genau zu
      machen ist. Für alle mit dem Default hier zum kopieren:<screen>xyz@debian:~$ <command>echo '[[ -s $HOME/.rvm/scripts/rvm ]] &amp;&amp; source $HOME/.rvm/scripts/rvm' &gt;&gt; .bashrc</command>
xyz@debian:~$ <command>perl -pi -e 's/\[ -z \"\$PS1\" \] \&amp;\&amp; return/if \[\[ -n \"\$PS1\" \]\] \; then/' .bashrc</command>
xyz@debian:~$ <command>echo 'fi' &gt;&gt; .bashrc</command>
xyz@debian:~$ </screen></para>

      <important>
        <para>Jetzt müssen Sie das Terminal schließen und ein neues Terminal
        öffnen (an sonsten wirkt die Veränderung von eben noch nicht).</para>
      </important>

      <para>Zum Testen ob <literal>rvm</literal> richtig installiert ist,rufen
      wir es einmal mit <literal>-v</literal> auf.<screen>xyz@debian:~$ <command>rvm -v</command>

rvm 1.0.1 by Wayne E. Seguin (wayneeseguin@gmail.com) [http://rvm.beginrescueend.com/]
</screen></para>

      <para>Sollte hierbei als Antwort der Bash <quote><literal>command not
      found</literal></quote> ausgegeben worden sein, müssen Sie die obigen
      Schritte noch einmal überprüfen. Wahrscheinlich haben Sie einen Schritt
      ausgelassen oder haben bei der Arbeit in der
      <filename>.bashrc</filename> einen Fehler gemacht. Bitte lesen Sie noch
      einmal die Ausgabe vom Skript <filename>rvm-install-head</filename> und
      führen Sie die entsprechenden Schritte durch.</para>

      <para>Mit <literal>rvm</literal> müssen wir jetzt erstmal das Paket
      <literal>zlib</literal> installieren:<screen>xyz@debian:~$ <command>rvm package install zlib</command>

info: Fetching zlib-1.2.5.tar.gz to /home/xyz/.rvm/archives
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  531k  100  531k    0     0  84370      0  0:00:06  0:00:06 --:--:--  105k

info: Extracting zlib-1.2.5.tar.gz to /home/xyz/.rvm/src
info: Configuring zlib in /home/xyz/.rvm/src/zlib-1.2.5.
info: Compiling zlib in /home/xyz/.rvm/src/zlib-1.2.5.
info: Installing zlib to /home/xyz/.rvm/usr
xyz@debian:~$ </screen></para>

      <para>Danach Ruby 1.9.2 installieren:<screen>xyz@debian:~$ <command>rvm install 1.9.2</command>

info: Installing Ruby from source to: /home/xyz/.rvm/rubies/ruby-1.9.2-p0

info: Downloading ruby-1.9.2-p0, this may take a while depending on your connection...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 8296k  100 8296k    0     0  21007      0  0:06:44  0:06:44 --:--:--     0

info: Extracting ruby-1.9.2-p0 ...
info: Configuring ruby-1.9.2-p0, this may take a while depending on your cpu(s)...
info: Compiling ruby-1.9.2-p0, this may take a while depending on your cpu(s)...
info: Installing ruby-1.9.2-p0
info: Installation of ruby-1.9.2-p0 is complete.
info: Updating rubygems for /home/xyz/.rvm/gems/ruby-1.9.2-p0
info: adjusting shebangs for ruby-1.9.2-p0 (gem irb erb ri rdoc testrb rake).
info: Importing initial gems...
xyz@debian:~$ </screen></para>

      <para>Noch werden Sie per Default ein 1.8er Ruby aufrufen. Das lässt
      sich leicht mit dem befehl <command>ruby -v</command>
      rausfinden:<screen>xyz@debian:~$ <command>ruby -v</command>
ruby 1.8.7 (2008-08-11 patchlevel 72) [i486-linux]
</screen></para>

      <para>Mit dem Befehl <command>rvm 1.9.2</command> können Sie aber auf
      ein 1.9.2er Ruby wechseln.<screen>xyz@debian:~$ <command>rvm 1.9.2</command>
xyz@debian:~$ <command>ruby -v</command>
ruby 1.9.2p0 (2010-08-18 revision 29036) [i686-linux]
</screen></para>

      <para>Dummerweise müssten Sie jetzt in jeder neuen Shell <command>rvm
      1.9.2</command> eingeben. Sie können für diesen User aber auch die
      Ruby-Version 1.9.2 als Default einstellen:<screen>xyz@debian:~$ <command>rvm --default 1.9.2</command>
</screen></para>

      <para>Mit dem Befehl <command>rvm system</command> können Sie auch
      jederzeit wieder auf die Ruby-Version 1.8.x zurückgehen. Geben Sie
      einfach <command>rvm</command> ein, um eine entsprechende Hilfe-Seite
      angezeigt zu bekommen.</para>
    </section>

    <section xml:id="deban-rails3-installieren">
      <title xml:id="deban-rails3-installieren.title">Rails 3.0
      installieren</title>

      <para>Zu erst überprüfen wir, ob ein Ruby in der Version 1.9.2
      aufgerufen wird. Falls dies nicht der Fall sein sollte, lesen Sie sich
      bitte <xref linkend="ruby-1.9.2-mit-rvm-debian5" /> durch.<screen>xyz@debian:~$ <command>ruby -v</command>
ruby 1.9.2p0 (2010-08-18 revision 29036) [i686-linux]
</screen></para>

      <para>Als nächstes stellen wir sicher, dass das
      <literal>gem</literal>-Paketmanagement aktuell ist:<screen>xyz@debian:~$ <command>gem update --system</command>
Updating RubyGems
Nothing to update

xyz@debian:~$ <command>gem update</command>
Updating installed gems
Updating bundler
Successfully installed bundler-1.0.0
Gems updated: bundler
Installing ri documentation for bundler-1.0.0...
Installing RDoc documentation for bundler-1.0.0...
xyz@debian:~$ </screen></para>

      <para>Der Rest ist einfach:<screen>xyz@debian:~$ <command>gem install rails --version 3.0.0</command>
Successfully installed activesupport-3.0.0
Successfully installed builder-2.1.2
Successfully installed i18n-0.4.1
<replaceable>[...]</replaceable>
Successfully installed thor-0.14.0
Successfully installed railties-3.0.0
Successfully installed rails-3.0.0
22 gems installed
Installing ri documentation for activesupport-3.0.0...
Installing ri documentation for builder-2.1.2...
Installing ri documentation for i18n-0.4.1...
<replaceable>[...]</replaceable>
Installing ri documentation for rack-1.2.1...
Installing RDoc documentation for railties-3.0.0...
Installing RDoc documentation for rails-3.0.0...
xyz@debian:~$ </screen></para>

      <para>Perfekt. Jetzt haben Sie Rails 3.0 installiert. <screen>xyz@debian:~$ <command>rails -v</command>
Rails 3.0.0
</screen></para>
    </section>

    <section xml:id="debian-install-danach">
      <title xml:id="debian-install-danach.title">Und jetzt?</title>

      <para>Wenn Sie noch nie mit Ruby gearbeitet haben, sollten Sie als
      nächstes <xref linkend="ruby-grundlagen" /> lesen. Wenn Sie schon
      Ruby-Meister sind und sich neu mit Rails beschäftigen wollen, dann
      empfehle ich Ihnen die Lektüre von <xref
      linkend="erste_schritte_mit_rails" />.</para>
    </section>
  </section>
</chapter>
