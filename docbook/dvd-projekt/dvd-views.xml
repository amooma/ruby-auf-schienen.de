<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="views"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title xml:id="views.title">Views</title>

  <section xml:id="grundwissen-views">
    <title>Grundwissen View</title>

    <para>Ein View ist im MVC für die Darstellung der Webseite zuständig.
    Wobei ein View nicht zwangsläufig eine HTML-Seite erstellt, sondern z.B.
    auch PDFs oder XML-Dateien rendern kann.</para>

    <section xml:id="view-verzeichnis">
      <title>Das View-Verzeichnis</title>

      <para>Einer der Vorteile von Ruby on Rails ist eine ganz stringente
      Verzeichnisstruktur. Views finden sich immer im Verzeichnis
      <filename>app/views/</filename>. Schauen wir mal rein:<screen>sw@debian:~/dvd-sammlung$ <command>tree app/views/</command>
app/views/
|-- dvds
|   |-- edit.html.erb
|   |-- index.html.erb
|   |-- new.html.erb
|   `-- show.html.erb
`-- layouts
    `-- dvds.html.erb

2 directories, 5 files
sw@debian:~/dvd-sammlung$</screen></para>

      <para>Die erb-Dateien im Verzeichnis <filename>app/views/dvds</filename>
      erscheinen sinnvoll und jeweils für die verschiedenen durch den
      Controller eingeleiteten Aktionen da zu sein.</para>
    </section>

    <section xml:id="app-views-layouts">
      <title>app/views/layouts/</title>

      <para>Das <filename>app/views/layouts/</filename> Verzeichnis enthält
      Default-Dateien. Quasi Schablonen oder besser Schemes. Die Datei
      <filename>app/views/layouts/dvds.html.erb</filename> wurde beim
      <link linkend="dvd-scaffolding">Scaffolding</link> erstellt.</para>
    </section>
  </section>
</chapter>
