<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="dvd-routing"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title xml:id="dvd-routing.title">Routing</title>

  <section>
    <title>Die Homepage</title>

    <para>Starten wir unseren Rails-Entwicklungs-Webserver <screen>sw@debian:~/dvd-sammlung$ <command>./script/server</command> 
=&gt; Booting WEBrick
=&gt; Rails 2.3.5 application starting on http://0.0.0.0:3000
=&gt; Call with -d to detach
=&gt; Ctrl-C to shutdown server
[2010-01-04 12:21:16] INFO  WEBrick 1.3.1
[2010-01-04 12:21:16] INFO  ruby 1.9.1 (2009-12-07) [i686-linux]
[2010-01-04 12:21:16] INFO  WEBrick::HTTPServer#start: pid=6219 port=3000
</screen> und schauen uns mal an, welche Seite wir unter der URL
    <uri>http://localhost:3000</uri> angezeigt bekommen:<screen>sw@debian:~/dvd-sammlung$ <command>w3m -dump http://localhost:3000</command>
  • [site:rubyonrails.org] [Search] the Rails site
  • Join the community

      □ Ruby on Rails
      □ Official weblog
      □ Wiki
  • Browse the documentation

      □ Rails API
      □ Ruby standard library
      □ Ruby core
      □ Rails Guides

Welcome aboard

You’re riding Ruby on Rails!

About your application’s environment

Getting started

Here’s how to get rolling:

 1. Use script/generate to create your models and controllers

    To see all available options, run it without parameters.

 2. Set up a default route and remove or rename this file

    Routes are set up in config/routes.rb.

 3. Create your database

    Run rake db:migrate to create your database. If you're not using SQLite
    (the default), edit config/database.yml with your username and password.

 
sw@debian:~/dvd-sammlung$</screen></para>

    <para>Eigentlich möchten wir auf dieser Seite aber die Auflistung aller
    DVDs anzeigen. Da wir im Webserverlog beim Abruf dieser Seite nichts
    gesehen haben, muss es sich um eine statische HTML-Seite aus dem
    Verzeichnis public/ handeln. Schauen wir mal nach:<screen>sw@debian:~/dvd-sammlung$ <command>ls public/</command>
404.html  500.html     images      javascripts  stylesheets
422.html  favicon.ico  index.html  robots.txt
sw@debian:~/dvd-sammlung$</screen></para>

    <para>A-ha! Da ist ja der Übeltäter! Löschen wir mal die Datei
    <filename>index.html</filename><screen>sw@debian:~/dvd-sammlung$ <command>rm public/index.html</command> 
sw@debian:~/dvd-sammlung$ </screen></para>

    <para>Und jetzt probieren wir es noch mal mit dem Webbrowser aus:<screen>sw@debian:~/dvd-sammlung$ <command>w3m -dump http://localhost:3000</command>
Routing Error

No route matches "/" with {:method=&gt;:get}

sw@debian:~/dvd-sammlung$</screen></para>

    <para>Es gibt also eine Routing-Fehlermeldung (<quote>Routing
    Error</quote>). Schauen wir uns mal die Log-Ausgabe vom Rails-Server
    an:<screen>Processing ApplicationController#index (for 127.0.0.1 at 2010-01-04 12:29:21) [GET]

ActionController::RoutingError (No route matches "/" with {:method=&gt;:get}):
  &lt;internal:prelude&gt;:8:in `synchronize'
  /usr/local/lib/ruby/1.9.1/webrick/httpserver.rb:111:in `service'
  /usr/local/lib/ruby/1.9.1/webrick/httpserver.rb:70:in `run'
  /usr/local/lib/ruby/1.9.1/webrick/server.rb:183:in `block in start_thread'

Rendering rescues/layout (not_found)
</screen></para>

    <para>Die Routen werden in der Datei <filename>config/routes.rb</filename>
    konfiguriert. Per Scaffolding wurden dort schon die RESTful Routen für
    unser <varname>dvd</varname> Model eingetragen:<screen>sw@debian:~/dvd-sammlung$ <command>grep -v "#" config/routes.rb | grep -v "^$"</command>
ActionController::Routing::Routes.draw do |map|
  map.resources :dvds
  
  map.connect ':controller/:action/:id'
  map.connect ':controller/:action/:id.:format'
end
sw@debian:~/dvd-sammlung$</screen></para>

    <para>Mit <command>rake routes</command> können wir uns auch die fertigen
    Routen anzeigen lassen:<screen>sw@debian:~/dvd-sammlung$ <command>rake routes</command>
(in /home/sw/dvd-sammlung)
    dvds GET    /dvds(.:format)                    {:controller=&gt;"dvds", :action=&gt;"index"}
         POST   /dvds(.:format)                    {:controller=&gt;"dvds", :action=&gt;"create"}
 new_dvd GET    /dvds/new(.:format)                {:controller=&gt;"dvds", :action=&gt;"new"}
edit_dvd GET    /dvds/:id/edit(.:format)           {:controller=&gt;"dvds", :action=&gt;"edit"}
     dvd GET    /dvds/:id(.:format)                {:controller=&gt;"dvds", :action=&gt;"show"}
         PUT    /dvds/:id(.:format)                {:controller=&gt;"dvds", :action=&gt;"update"}
         DELETE /dvds/:id(.:format)                {:controller=&gt;"dvds", :action=&gt;"destroy"}
                /:controller/:action/:id           
                /:controller/:action/:id(.:format) 
sw@debian:~/dvd-sammlung$</screen></para>

    <para>Keiner der dort aufgeführten Routen matched auf unsere angefragte
    URL <uri>http://localhost:3000</uri> und deshalb gibt es eine
    Fehlermeldung. Schauen wir noch mal in die
    <filename>config/routes.rb</filename><screen>sw@debian:~/dvd-sammlung$ <command>cat -n config/routes.rb</command> 
     1 ActionController::Routing::Routes.draw do |map|
     2   map.resources :dvds
     3 
     4   # The priority is based upon order of creation: first created -&gt; highest priority.
     5 
     6   # Sample of regular route:
     7   #   map.connect 'products/:id', :controller =&gt; 'catalog', :action =&gt; 'view'
     8   # Keep in mind you can assign values other than :controller and :action
     9 
    10   # Sample of named route:
    11   #   map.purchase 'products/:id/purchase', :controller =&gt; 'catalog', :action =&gt; 'purchase'
    12   # This route can be invoked with purchase_url(:id =&gt; product.id)
    13 
    14   # Sample resource route (maps HTTP verbs to controller actions automatically):
    15   #   map.resources :products
    16 
    17   # Sample resource route with options:
    18   #   map.resources :products, :member =&gt; { :short =&gt; :get, :toggle =&gt; :post }, :collection =&gt; { :sold =&gt; :get }
    19 
    20   # Sample resource route with sub-resources:
    21   #   map.resources :products, :has_many =&gt; [ :comments, :sales ], :has_one =&gt; :seller
    22   
    23   # Sample resource route with more complex sub-resources
    24   #   map.resources :products do |products|
    25   #     products.resources :comments
    26   #     products.resources :sales, :collection =&gt; { :recent =&gt; :get }
    27   #   end
    28 
    29   # Sample resource route within a namespace:
    30   #   map.namespace :admin do |admin|
    31   #     # Directs /admin/products/* to Admin::ProductsController (app/controllers/admin/products_controller.rb)
    32   #     admin.resources :products
    33   #   end
    34 
    35   # You can have the root of your site routed with map.root -- just remember to delete public/index.html.
    36   # map.root :controller =&gt; "welcome"
    37 
    38   # See how all your routes lay out with "rake routes"
    39 
    40   # Install the default routes as the lowest priority.
    41   # Note: These default routes make all actions in every controller accessible via GET requests. You should
    42   # consider removing or commenting them out if you're using named routes and resources.
    43   map.connect ':controller/:action/:id'
    44   map.connect ':controller/:action/:id.:format'
    45 end
sw@debian:~/dvd-sammlung$</screen></para>

    <para>Dort finden wir in der Zeile 36 schon einen Beispieleintrag für das
    von uns gewünschte Verhalten. Wir setzten dort mal als Controller
    <varname>dvds</varname> ein und entfernen das Kommentarzeichen:<screen>sw@debian:~/dvd-sammlung$ <command>cat -n config/routes.rb</command> 
     1 ActionController::Routing::Routes.draw do |map|
     2   map.resources :dvds
     3 
     4   # The priority is based upon order of creation: first created -&gt; highest priority.
     5 
     6   # Sample of regular route:
     7   #   map.connect 'products/:id', :controller =&gt; 'catalog', :action =&gt; 'view'
     8   # Keep in mind you can assign values other than :controller and :action
     9 
    10   # Sample of named route:
    11   #   map.purchase 'products/:id/purchase', :controller =&gt; 'catalog', :action =&gt; 'purchase'
    12   # This route can be invoked with purchase_url(:id =&gt; product.id)
    13 
    14   # Sample resource route (maps HTTP verbs to controller actions automatically):
    15   #   map.resources :products
    16 
    17   # Sample resource route with options:
    18   #   map.resources :products, :member =&gt; { :short =&gt; :get, :toggle =&gt; :post }, :collection =&gt; { :sold =&gt; :get }
    19 
    20   # Sample resource route with sub-resources:
    21   #   map.resources :products, :has_many =&gt; [ :comments, :sales ], :has_one =&gt; :seller
    22   
    23   # Sample resource route with more complex sub-resources
    24   #   map.resources :products do |products|
    25   #     products.resources :comments
    26   #     products.resources :sales, :collection =&gt; { :recent =&gt; :get }
    27   #   end
    28 
    29   # Sample resource route within a namespace:
    30   #   map.namespace :admin do |admin|
    31   #     # Directs /admin/products/* to Admin::ProductsController (app/controllers/admin/products_controller.rb)
    32   #     admin.resources :products
    33   #   end
    34 
    35   # You can have the root of your site routed with map.root -- just remember to delete public/index.html.
    36   <emphasis>map.root :controller =&gt; "dvds"</emphasis>
    37 
    38   # See how all your routes lay out with "rake routes"
    39 
    40   # Install the default routes as the lowest priority.
    41   # Note: These default routes make all actions in every controller accessible via GET requests. You should
    42   # consider removing or commenting them out if you're using named routes and resources.
    43   map.connect ':controller/:action/:id'
    44   map.connect ':controller/:action/:id.:format'
    45 end
sw@debian:~/dvd-sammlung$</screen></para>

    <para>rake routes sieht jetzt so aus, als wenn wir eine / Route auflösen
    können (3. letzte Zeile):<screen>sw@debian:~/dvd-sammlung$ <command>rake routes</command>
(in /home/sw/dvd-sammlung)
    dvds GET    /dvds(.:format)                    {:controller=&gt;"dvds", :action=&gt;"index"}
         POST   /dvds(.:format)                    {:controller=&gt;"dvds", :action=&gt;"create"}
 new_dvd GET    /dvds/new(.:format)                {:controller=&gt;"dvds", :action=&gt;"new"}
edit_dvd GET    /dvds/:id/edit(.:format)           {:controller=&gt;"dvds", :action=&gt;"edit"}
     dvd GET    /dvds/:id(.:format)                {:controller=&gt;"dvds", :action=&gt;"show"}
         PUT    /dvds/:id(.:format)                {:controller=&gt;"dvds", :action=&gt;"update"}
         DELETE /dvds/:id(.:format)                {:controller=&gt;"dvds", :action=&gt;"destroy"}
<emphasis>    root        /                                  {:controller=&gt;"dvds", :action=&gt;"index"}
</emphasis>                /:controller/:action/:id           
                /:controller/:action/:id(.:format) 
sw@debian:~/dvd-sammlung$</screen></para>

    <para>Bei Veränderungen der Routen muss man den Rails-Webserver neu
    starten:<screen>sw@debian:~/dvd-sammlung$ <command>./script/server</command> 
=&gt; Booting WEBrick
=&gt; Rails 2.3.5 application starting on http://0.0.0.0:3000
=&gt; Call with -d to detach
=&gt; Ctrl-C to shutdown server
[2010-01-04 13:01:26] INFO  WEBrick 1.3.1
[2010-01-04 13:01:26] INFO  ruby 1.9.1 (2009-12-07) [i686-linux]
[2010-01-04 13:01:27] INFO  WEBrick::HTTPServer#start: pid=6316 port=3000
</screen></para>

    <para>Und jetzt noch mal den Webbrowser ausprobieren:<screen>w@debian:~/dvd-sammlung$ <command>w3m -dump http://localhost:3000</command>
Received cookie: _dvd-sammlung_session=BAh7BjoPc2Vzc2lvbl9pZCIlZjE0MGQ0YzY5NDM4MWMxYTAzNDFjOWVkZTI0OGY2ODg%3D--955cae544772759d3729a09cb2ebaf32b2522bf8
Listing dvds

  Title (Production Year)   Duration Plot Rating
The Terminator (1984)       01:48
Terminator 2 (1992)         NA
Terminator Salvation (2009) NA
Rain Man (1988)             NA            *****
War of the Worlds (2005)    NA            ****
Collateral (2004)           NA            *****
Miami Vice (2006)           NA            *****
Hancock (2008)              NA            ****
The Aviator (2004)          NA            ****
Some Like It Hot (1959)     NA            *****
W. (2008)                   NA            ****
Iron Man (2008)             NA            *****
The Dark Knight (2008)      NA            *****


New dvd
sw@debian:~/dvd-sammlung$</screen></para>

    <para>Sehr gut! Im Log steht der folgende Eintrag:<screen>Processing DvdsController#index (for 127.0.0.1 at 2010-01-04 13:02:12) [GET]
  Dvd Load (0.0ms)   SELECT * FROM "dvds" 
  SQL (0.0ms)   SELECT count(*) AS count_all FROM "dvds" 
Rendering template within layouts/dvds
Rendering dvds/index
Completed in 47ms (View: 47, DB: 0) | 200 OK [http://localhost/]
</screen></para>
  </section>
</chapter>
