<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="scaffolding"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title xml:id="scaffolding.title">Scaffolding</title>

  <section>
    <title>Einleitung</title>

    <para>Die haben viel gelesen und mussten lange auf diesen Moment warten.
    Scaffolding ist Fluch und Segen gleichermassen. Scaffolding heißt nicht
    mehr, als das ein Grundgerüst für eine Applikation erstellt wird. Dieses
    Grundgerüst enthält nicht nur das Model, sondern auch eine einfache
    Web-GUI. Der meiner Meinung nach größte Teil an Frust mit Rails entsteht
    regelmässig dadurch, das Anfänger ohne Ruby-Grundkenntnisse und ohne zu
    Wissen was ActiveRecord ist mit Scaffolding schnell zu einem Ergebnis
    kommen, aber dann nicht weiter wissen. Da Sie aber <xref
    linkend="ruby-grundlagen" />, <xref linkend="erste_schritte_mit_rails" />
    und <xref linkend="activerecord_chapter" /> durchgearbeitet haben, werden
    Sie Scaffolding direkt verstehen und ausnutzen können.</para>
  </section>

  <section>
    <title>Einfaches Beispiel</title>

    <para>Legen wir doch mal mit Scaffolding eine Liste von Bundeskanzlern an.
    Dazu erst mal eine neue Rails-Applikation anlegen:<screen>stefan@swmbp 0 1.9.2-p0 ~$ <command>rails new politics</command>
[...]
stefan@swmbp 0 1.9.2-p0 ~$ <command>cd politics</command>
stefan@swmbp 0 1.9.2-p0 politics$ <command>bundle install</command>
[...]
stefan@swmbp 0 1.9.2-p0 politics$ </screen></para>

    <para>Am Anfang schauen wir uns mal die Optionen von Scaffolding
    an:<screen>stefan@swmbp 0 1.9.2-p0 politics$ <command>rails generate scaffold</command>
Usage:
  rails generate scaffold NAME [field:type field:type] [options]

Options:
  -o, --orm=NAME                  # Orm to be invoked
                                  # Default: active_record
      [--force-plural]            # Forces the use of a plural ModelName
  -c, --scaffold-controller=NAME  # Scaffold controller to be invoked
                                  # Default: scaffold_controller
  -y, [--stylesheets]             # Indicates when to generate stylesheets
                                  # Default: true

ActiveRecord options:
      [--migration]            # Indicates when to generate migration
                               # Default: true
      [--timestamps]           # Indicates when to generate timestamps
                               # Default: true
      [--parent=PARENT]        # The parent class for the generated model
  -t, [--test-framework=NAME]  # Test framework to be invoked
                               # Default: test_unit

TestUnit options:
      [--fixture]                   # Indicates when to generate fixture
                                    # Default: true
  -r, [--fixture-replacement=NAME]  # Fixture replacement to be invoked

ScaffoldController options:
  -e, [--template-engine=NAME]  # Template engine to be invoked
                                # Default: erb
      [--helper]                # Indicates when to generate helper
                                # Default: true

Runtime options:
  -f, [--force]    # Overwrite files that already exist
  -p, [--pretend]  # Run but do not make any changes
  -q, [--quiet]    # Supress status output
  -s, [--skip]     # Skip files that already exist

Description:
    Create rails files for scaffold generator.
stefan@swmbp 0 1.9.2-p0 politics$</screen></para>

    <para>Ich mache es kurz: Für unseren jetzigen Kenntnissstand können wir
    <code>scaffold</code> wie <code>model</code> benutzen (siehe <xref
    linkend="activerecord_datenbank_anlegen" />). Legen wir mal das Scaffold
    für Bundeskanzler an:<screen>stefan@swmbp 0 1.9.2-p0 politics$ <command>rails generate scaffold chancellor firstname:string lastname:string birthday:date day_of_death:date inauguration:date</command>
      invoke  active_record
      create    db/migrate/20101203175125_create_chancellors.rb
      create    app/models/chancellor.rb
      invoke    test_unit
      create      test/unit/chancellor_test.rb
      create      test/fixtures/chancellors.yml
       route  resources :chancellors
      invoke  scaffold_controller
      create    app/controllers/chancellors_controller.rb
      invoke    erb
      create      app/views/chancellors
      create      app/views/chancellors/index.html.erb
      create      app/views/chancellors/edit.html.erb
      create      app/views/chancellors/show.html.erb
      create      app/views/chancellors/new.html.erb
      create      app/views/chancellors/_form.html.erb
      invoke    test_unit
      create      test/functional/chancellors_controller_test.rb
      invoke    helper
      create      app/helpers/chancellors_helper.rb
      invoke      test_unit
      create        test/unit/helpers/chancellors_helper_test.rb
      invoke  stylesheets
      create    public/stylesheets/scaffold.css
stefan@swmbp 0 1.9.2-p0 politics$ </screen></para>

    <para>Wie Sie sehen wurde von rails generate scaffold schon das Model mit
    angelegt. Wir können entsprechend direkt <command>rake
    db:migrate</command> aufrufen:<screen>stefan@swmbp 0 1.9.2-p0 politics$ <command>rake db:migrate</command>
(in /Users/stefan/politics)
==  CreateChancellors: migrating ==============================================
-- create_table(:chancellors)
   -&gt; 0.0015s
==  CreateChancellors: migrated (0.0016s) =====================================

stefan@swmbp 0 1.9.2-p0 politics$</screen></para>

    <para>Legen wir in der <filename>db/seeds.rb</filename> die ersten sechs
    Kanzler an. Bei Walter Scheel bin ich mir nicht sicher, aber es handelt
    sich bei diesem Buch ja um ein Werk zum Thema Rails und nicht zur
    deutschen Nachkriegspolitik.<programlisting>Chancellor.create(:firstname =&gt; 'Konrad', :lastname =&gt; 'Adenauer', :birthday =&gt; '05.01.1876', :day_of_death =&gt; '19.04.1967', :inauguration =&gt; '15.09.1949')
Chancellor.create(:firstname =&gt; 'Ludwig', :lastname =&gt; 'Erhard', :birthday =&gt; '04.02.1897', :day_of_death =&gt; '05.05.1977', :inauguration =&gt; '16.10.1963')
Chancellor.create(:firstname =&gt; 'Kurt Georg', :lastname =&gt; 'Kiesinger', :birthday =&gt; '06.04.1904', :day_of_death =&gt; '09.03.1988', :inauguration =&gt; '01.12.1966')
Chancellor.create(:firstname =&gt; 'Willy', :lastname =&gt; 'Brandt', :birthday =&gt; '18.12.1913', :day_of_death =&gt; '08.10.1992', :inauguration =&gt; '21.10.1969')
Chancellor.create(:firstname =&gt; 'Walter', :lastname =&gt; 'Scheel', :birthday =&gt; '08.09.1919', :inauguration =&gt; '07.05.1974')
Chancellor.create(:firstname =&gt; 'Helmut', :lastname =&gt; 'Schmidt', :birthday =&gt; '23.12.1918', :inauguration =&gt; '16.05.1974')
</programlisting></para>

    <para>Daten anlegen:<screen>stefan@swmbp 0 1.9.2-p0 politics$ <command>rake db:seed</command>
(in /Users/stefan/politics)
stefan@swmbp 0 1.9.2-p0 politics$</screen></para>

    <para>Jetzt starten wir den Rails Webserver:<screen>stefan@swmbp 0 1.9.2-p0 politics$ <command>rails server</command>
=&gt; Booting WEBrick
=&gt; Rails 3.0.3 application starting in development on http://0.0.0.0:3000
=&gt; Call with -d to detach
=&gt; Ctrl-C to shutdown server
[2010-12-03 19:09:48] INFO  WEBrick 1.3.1
[2010-12-03 19:09:48] INFO  ruby 1.9.2 (2010-08-18) [x86_64-darwin10.4.0]
[2010-12-03 19:09:48] INFO  WEBrick::HTTPServer#start: pid=17507 port=3000
</screen></para>

    <note>
      <para>Falls sie jetzt eine Warnung Ihrer eingebauten Firewall bekommen,
      zeigt dies das Sie <xref linkend="erste_schritte_mit_rails" /> nicht
      durchgearbeitet haben. ;-)</para>
    </note>

    <para>Jetzt ein kleiner Trommelwirbel ... Spannung ... den Web-Browser
    starten und die URL <uri
    xlink:href="http://0.0.0.0:3000/chancellors">http://0.0.0.0:3000/chancellors</uri>
    aufrufen. Die sehen die Liste der Bundeskanzler als einfache
    Webseite.<screenshot>
        <info>
          <title>Index der eingetragenen Bundeskanzler</title>
        </info>

        <mediaobject>
          <imageobject>
            <imagedata fileref="screenshots/chancellor_index.jpg"></imagedata>
          </imageobject>
        </mediaobject>
      </screenshot></para>

    <para>Wenn Sie jetzt auf den Link "New Chancellor" klicken, dann bekommen
    Sie ein Eingabeformular für einen neuen Datensatz angezeigt:<screenshot>
        <info>
          <title>Eingabeformular für einen neuen Datensatz</title>
        </info>

        <mediaobject>
          <imageobject>
            <imagedata fileref="screenshots/chancellor_new.jpg"></imagedata>
          </imageobject>
        </mediaobject>
      </screenshot></para>

    <para>Gehen Sie mit der Back-Taste Ihres Browsers wieder zurück und
    klicken Sie auf den "Show" Link in der Zeile von Konrad Adenauer. Sie
    bekommen folgende Seite angezeigt:<screenshot>
        <info>
          <title>Anzeige eines einzelnen Datensatzes</title>
        </info>

        <mediaobject>
          <imageobject>
            <imagedata fileref="screenshots/chancellor_show.jpg"></imagedata>
          </imageobject>
        </mediaobject>
      </screenshot></para>

    <para>Wenn Sie jetzt auf "Edit" klicken bekommen Sie die Editieransicht zu
    diesem Datensatz:<screenshot>
        <info>
          <title>Editier-Formular für einen bestehenden Datensatz</title>
        </info>

        <mediaobject>
          <imageobject>
            <imagedata fileref="screenshots/chancellor_edit.jpg"></imagedata>
          </imageobject>
        </mediaobject>
      </screenshot></para>

    <para>Und wenn Sie auf der Index-Seite auf "Destroy" klicken, können Sie
    nach einer Sicherheitsabfrage einen Datensatz löschen. Ist das cool?! Sie
    haben innerhalb von nicht mal 10 Minuten eine Webapplikation geschrieben,
    mit der Sie Datensätze auflisten, anschauen, editieren, löschen und neu
    anlegen können. Das ist der Zauber von Scaffolding.</para>

    <para>Jetzt holen wir uns aber erst mal einen Kaffee und schauen ein wenig
    hinter die Kullissen. Beim Erstellen des Scaffolding wurden auf dem
    Bildschirm u.a. die folgenden Zeilen ausgegeben:<screen>       route  resources :chancellors
      invoke  scaffold_controller
      create    app/controllers/chancellors_controller.rb
      invoke    erb
      create      app/views/chancellors
      create      app/views/chancellors/index.html.erb
      create      app/views/chancellors/edit.html.erb
      create      app/views/chancellors/show.html.erb
      create      app/views/chancellors/new.html.erb
      create      app/views/chancellors/_form.html.erb
</screen></para>

    <para><command>rails generate scaffold</command> hat für uns eine Route
    (dazu später in <xref linkend="routes" /> mehr), einen Controller und
    mehrere Views (siehe <xref linkend="dynamische_webseiten" />) angelegt.
    Als das hätten wir auch von Hand machen können. Scaffolding ist also nur
    ein Automatismus, der uns Arbeit bei den grundsätzlichen Dingen abnimmt.
    Dem liegt die Annahme Zugrunde, das man immer Datensätze ansehen, anlegen
    und löschen möchte.</para>

    <para>Ohne uns zu intensiv mit Routes zu beschäftigen, schauen wir gerade
    mal die verfügbaren Routes an. Dazu müssen Sie mit <keycap>CTRL-C</keycap>
    den Webserver stoppen und <command>rake routes</command> eingeben:<screen>stefan@swmbp 0 1.9.2-p0 politics$ <command>rake routes</command>
(in /Users/stefan/politics)
    chancellors GET    /chancellors(.:format)          {:action=&gt;"index", :controller=&gt;"chancellors"}
                POST   /chancellors(.:format)          {:action=&gt;"create", :controller=&gt;"chancellors"}
 new_chancellor GET    /chancellors/new(.:format)      {:action=&gt;"new", :controller=&gt;"chancellors"}
edit_chancellor GET    /chancellors/:id/edit(.:format) {:action=&gt;"edit", :controller=&gt;"chancellors"}
     chancellor GET    /chancellors/:id(.:format)      {:action=&gt;"show", :controller=&gt;"chancellors"}
                PUT    /chancellors/:id(.:format)      {:action=&gt;"update", :controller=&gt;"chancellors"}
                DELETE /chancellors/:id(.:format)      {:action=&gt;"destroy", :controller=&gt;"chancellors"}
stefan@swmbp 0 1.9.2-p0 politics$</screen></para>

    <para>Alle Routes rufen Actions (also Methoden) im Controller
    <varname>chancellors</varname> auf. Höchste Zeit einen Blick in die Datei
    <filename>app/controllers/chancellors_controller.rb</filename> zu werfen.
    Ganz am Anfang finden Sie den Eintrag für die
    <methodname>index</methodname> Action:<programlisting>class ChancellorsController &lt; ApplicationController
<emphasis>  # GET /chancellors
  # GET /chancellors.xml
</emphasis><emphasis>  def index
    @chancellors = Chancellor.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml =&gt; @chancellors }
    end
  end
</emphasis></programlisting></para>

    <para>Der Code ist übersichtlich. In der Instanz-Variable
    <varname>@chancellors</varname> werden alle Bundeskanzler abgespeichert.
    Danach wird irgendwas mit einem Format gemacht. hmmm... das steht was von
    XML. Probieren wir mal was aus. Bitte starten Sie mit <command>rails
    server</command> wieder den Rails Server und gehen Sie mit Ihrem
    Webbrowser auf die URL <uri
    xlink:href="http://0.0.0.0:3000/chancellors.xml">http://0.0.0.0:3000/chancellors.xml</uri>.
    Hereka! Sie bekommen folgende Ansicht:<screenshot>
        <info>
          <title>Index XML-Anzeige</title>
        </info>

        <mediaobject>
          <imageobject>
            <imagedata fileref="screenshots/chancellors_index_xml.jpg"></imagedata>
          </imageobject>
        </mediaobject>
      </screenshot></para>

    <para>Das bringt uns auch nicht richtig weiter. Es werden also irgendwie
    alle Datensätze angezeigt. Vielleicht sollten wir uns mal den Source-Code
    dieser Seite anschauen:<screenshot>
        <info>
          <title>Index XML-Anzeige im Source-Code</title>
        </info>

        <mediaobject>
          <imageobject>
            <imagedata fileref="screenshots/chancellors_index_xml_source.jpg"></imagedata>
          </imageobject>
        </mediaobject>
      </screenshot></para>

    <para>A-ha! Der Browser hat XML vom Rails-Webserver bekommen und versucht
    es irgendwie darzustellen. Das Rendern der XML-Seite wird von der
    Zeile<programlisting>format.xml  { render :xml =&gt; @chancellors }</programlisting>realisiert.
    Wenn Sie keine XML-Ausgabe wünschen, müssen Sie diese Zeile in der
    <filename>app/controllers/chancellors_controller.rb</filename>
    löschen.</para>

    <warning>
      <para>Relativ viele Rails-Entwickler benutzen fleissig Scaffoling,
      vergessen aber die XML-Ausgabe zu deaktivieren. Das kann dann eine
      trivial zu benutzende Sicherheitslücke in der Applikation sein.</para>
    </warning>

    <para>Das Rendern der HTML-Seite wird von der Zeile <programlisting>format.html # index.html.erb</programlisting>realisiert.
    Diese ruft dafür den View
    <filename>app/views/chancellors/index.html.erb</filename> auf. Werfen wir
    mal einen Blick in diese Datei:<programlisting>&lt;h1&gt;Listing chancellors&lt;/h1&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Firstname&lt;/th&gt;
    &lt;th&gt;Lastname&lt;/th&gt;
    &lt;th&gt;Birthday&lt;/th&gt;
    &lt;th&gt;Day of death&lt;/th&gt;
    &lt;th&gt;Inauguration&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
  &lt;/tr&gt;

&lt;% @chancellors.each do |chancellor| %&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;%= chancellor.firstname %&gt;&lt;/td&gt;
    &lt;td&gt;&lt;%= chancellor.lastname %&gt;&lt;/td&gt;
    &lt;td&gt;&lt;%= chancellor.birthday %&gt;&lt;/td&gt;
    &lt;td&gt;&lt;%= chancellor.day_of_death %&gt;&lt;/td&gt;
    &lt;td&gt;&lt;%= chancellor.inauguration %&gt;&lt;/td&gt;
    &lt;td&gt;&lt;%= link_to 'Show', chancellor %&gt;&lt;/td&gt;
    &lt;td&gt;&lt;%= link_to 'Edit', edit_chancellor_path(chancellor) %&gt;&lt;/td&gt;
    &lt;td&gt;&lt;%= link_to 'Destroy', chancellor, :confirm =&gt; 'Are you sure?', :method =&gt; :delete %&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;% end %&gt;
&lt;/table&gt;

&lt;br /&gt;

&lt;%= link_to 'New Chancellor', new_chancellor_path %&gt;
</programlisting></para>

    <para>Es wird eine Tabelle erzeugt und in dieser Tabelle das Array
    @chancellors per Schleife durchlaufen. Neu für uns sind die
    <code>link_to</code> Kommandos. Mit <code>link_to</code> werden
    <code>&lt;a href ...&gt;</code> Links erzeugt. </para>

    <para>Stay tuned.</para>

    <para></para>

    <para></para>

    <para></para>

    <para></para>

    <para></para>

    <para></para>

    <para></para>

    <para></para>
  </section>
</chapter>
