<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="installation-und-versionsauswahl" xml:lang="en"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title xml:id="installation-und-versionsauswahl.title">Version Selection and
  Installation</title>

  <section xml:id="welche-ruby-version">
    <title xml:id="welche-ruby-version.title">Ruby in Version 1.8.x, 1.9.2 or
    1.9.3?</title>

    <indexterm>
      <primary>version</primary>

      <secondary>Ruby</secondary>
    </indexterm>

    <para>Quick answer: <emphasis> Please use Ruby 1.9.3 or
    1.9.2.</emphasis></para>

    <para>Many books and documentations that you have already seen will also
    work with Ruby 1.8.x. So why on earth do we now make such a fuss, and why
    don't we just use Ruby 1.8.x â€“ which, with a bit of luck, is already
    installed on your system? Purely <quote>mathematically</quote>, the
    difference between 1.9.2 or 1.9.3 and 1.8.x is not all that great (the
    number 1.9 is only about 5 % bigger than 1.8)?!</para>

    <para>Here is why:<itemizedlist>
        <listitem>
          <para>The difference between Ruby 1.9.x and Ruby 1.8.x is enormous.
          Do not be fooled by the version number alone. To mention just the
          simplest argument: Ruby 1.9.3 performs much better than Ruby 1.8.x.
          In what sense <quote>better</quote>? Depending on the benchmark,
          it's 2 to 6 times faster (in certain areas, even factor 10 and
          more).</para>
        </listitem>

        <listitem>
          <para>Many Rails authors originate from English-speaking countries,
          where you can manage quite well with Ruby 1.8.x and US-ASCII. But
          for all other languages, it's not looking quite so rosy. Only
          version 1.9.x onwards offers a good multi-encoding environment. You
          could even say that Ruby 1.9.x is way ahead of pretty much every
          other programming language in this respect.<footnote>
              <para>The moderate handling of UTF-8 and Co. in Ruby 1.8 is
              almost ironic. After all, the inventor of Ruby (Yukihiro
              Matsumoto a.k.a. Matz) is Japanese, so we could well expect to
              find support for more than just ASCII. The reason for
              implementing the support so late has to do with the arrogant way
              of developing UTF-8 or UTF-16. The corresponding committees did
              not initially feel compelled to take a closer look at the Asian
              writing culture. As a result, the first version was alright for
              European fonts, but a complete joke for Asian cultures. It was
              fixed later on, and Ruby moved along with it. The multi-encoding
              support in Ruby 1.9 is now so good that you can only look down
              in pity at other programming languages.</para>
            </footnote></para>
        </listitem>

        <listitem>
          <para>Rails 4 will no longer work with Ruby 1.8.x. So you are
          closing the doors to upgrade options.<footnote>
              <para>See also <uri
              xlink:href="https://twitter.com/#!/dhh/status/54618472692449280">https://twitter.com/#!/dhh/status/54618472692449280</uri>
              tweet by David Heinemeier Hansson: <quote>As a general note, if
              you're starting a new Rails app, you should be running Ruby
              1.9.2. Rails 4 will require it. Ruby 1.8.x is
              legacy.</quote></para>
            </footnote></para>
        </listitem>
      </itemizedlist></para>
  </section>

  <section xml:id="welche-rails-version">
    <title xml:id="welche-rails-version.title">Rails 2.x or 3.x?</title>

    <indexterm>
      <primary>version</primary>

      <secondary>Rails</secondary>
    </indexterm>

    <para>Rails 2.3.x is no longer up to date! Don't do this do yourself. If
    you are looking for a book on Rails 2.3.x, then you need to make a quick
    trip to Amazon. This book will only help you with 3.2.x.</para>

    <important>
      <para>A programming language like Ruby and a framework like Rails are
      constantly changing and evolving. Please visit <uri
      xlink:href="http://http://xyzpub.com/en/ruby-on-rails/3.2/">http://http://xyzpub.com/en/ruby-on-rails/3.2/</uri>
      from time to time. On this web page, I will publish current information
      and chapter updates if applicable.</para>
    </important>
  </section>

  <section xml:id="unterschied_produktiv_und_entwicklungssystem">
    <title
    xml:id="unterschied_produktiv_und_entwicklungssystem.title">Difference
    Between Production System and Development System</title>

    <para>The installation methods described in <xref
    linkend="installation-und-versionsauswahl"/> are intended for development
    systems. If you are looking for instructions on installing a web server in
    the production system, please have a look at <xref
    linkend="rails_production_webserver"/>.</para>

    <para>Both types of installation are very different.</para>
  </section>

  <xi:include href="installation-ror-mac-os-x.xml"/>

  <xi:include href="installation-ror-debian-6.xml"/>

  <xi:include href="installation-ror-ubuntu-11_10.xml"/>

  <xi:include href="installation-ror-windows.xml"/>
</chapter>
