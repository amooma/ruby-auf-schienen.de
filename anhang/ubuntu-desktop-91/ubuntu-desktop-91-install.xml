<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>Installation auf Ubuntu Desktop 9.10</title>

  <para>Es wird in dieser Anleitung nicht jeder Schritt und jeder Befehl lang
  und breit erklärt. Ich gehe davon aus, das Sie sich mit der Linux
  Kommandozeile so gut auskennen, das die jeweiligen Befehle selbsterklärend
  sind.</para>

  <section>
    <title>Art des Systems</title>

    <para>Im Gegensatz zu der Installationsbeschreibung zu Debian 5.0 setze
    ich bei der Installation auf Ubuntu Desktop 9.10 kein installiertes Ubuntu
    System voraus. Sie können auch die Ubuntu-CD booten und die Ruby on Rails
    Installation im Live-File-System machen.</para>

    <section>
      <title>Live-File-System</title>

      <para>Sie haben die Ubuntu-CD im Live-File-System-Modus gebootet, also
      noch nichts auf der Festplatte installiert. Sie können problemlos Ruby
      on Rails installieren, aber müssen natürlich im Hinterkopf dran denken,
      das beim nächsten Booten alles weg ist.</para>
    </section>

    <section>
      <title>Fest installiertes Ubuntu System</title>

      <para>Es versteht sich eigentlich von selbst, dass man auf einem frisch
      installierten System erst einmal sicherstellt, dass die Paketverwaltung
      die aktuellen Paketlisten zur Verfügung hat und das System auf dem
      neuesten Stand ist.<screen>ubuntu@ubuntu:~$ <command>sudo aptitude update &amp;&amp; sudo aptitude safe-upgrade</command>
Ign cdrom://Ubuntu 9.10 _Karmic Koala_ - Release i386 (20091028.5) karmic/main Translation-de
Ign cdrom://Ubuntu 9.10 _Karmic Koala_ - Release i386 (20091028.5) karmic/restricted Translation-de
Treffer http://archive.ubuntu.com karmic Release.gpg                            
Hole:1 http://archive.ubuntu.com karmic/main Translation-de [412kB]     
Hole:2 http://archive.ubuntu.com karmic/restricted Translation-de [897B]  
Hole:3 http://archive.ubuntu.com karmic-updates Release.gpg [189B]        

[...]

ubuntu@ubuntu:~$ </screen></para>

      <para>Danach bitte einmal booten, um sicher zu stellen, das ein evt. neu
      installieter Kernel auch benutzt wird.<screen>ubuntu@ubuntu:~$ <command>sudo shutdown -r now</command>

Broadcast message from ubuntu@ubuntu
	(/dev/pts/1) at 20:42 ...

The system is going down for reboot NOW!
</screen></para>
    </section>
  </section>

  <section version="5.0">
    <title>Installation von Ruby on Rails</title>

    <para>Wir schlagen uns nicht mehr mit der alten 1.8er Ruby-Version rum,
    sondern installieren Ruby 1.9. Und das der Einfachheit halber direkt von
    der Quelle (bitte immer den aktuellen Downloadlink von
    <olink>http://www.ruby-lang.org/en/downloads/</olink> übernehmen). Zum
    Kompilieren benötigen wir eine Buildumgebung. Und wo wir schon mal dabei
    sind, installieren wir direkt noch die Datenbank
    <application>sqlite3</application><footnote>
        <para>Ja, man könnte hier auch eine MySQL oder sonst was Datenbank
        installieren. Brauchen wir aber alles nicht. Die sqlite3 ist für
        unsere Entwicklungsumgebung perfekt geeignet. In der Produktivumgebung
        kann man immer noch auf andere Datenbanken umsteigen.</para>
      </footnote> und den Kommando-Zeilen Web-Browser
    <application>w3m</application>, damit wir später schneller loslegen
    können.<screen>ubuntu@ubuntu:~$ <command>sudo aptitude -y install build-essential libssl-dev zlib1g-dev libreadline5-dev libncurses5-dev sqlite3 libsqlite3-dev curl w3m</command>
Paketlisten werden gelesen... Fertig
Abhängigkeitsbaum wird aufgebaut       
Lese Status-Informationen ein... Fertig
Lese erweiterte Statusinformationen      
Initialisiere Paketstatus... Fertig
Die folgenden NEUEN Pakete werden zusätzlich installiert:
  build-essential curl dpkg-dev{a} fakeroot{a} g++{a} g++-4.4{a} 
  libncurses5-dev libreadline5-dev libsqlite3-dev libssl-dev 
  libstdc++6-4.4-dev{a} patch{a} sqlite3 zlib1g-dev 
0 Pakete aktualisiert, 14 zusätzlich installiert, 0 werden entfernt und 164 nicht aktualisiert.
Muss 4.572kB/11,6MB an Archiven herunterladen. Nach dem Entpacken werden 38,4MB zusätzlich belegt sein.
Schreibe erweiterte Statusinformationen... Fertig
Hole:1 http://archive.ubuntu.com karmic/main curl 7.19.5-1ubuntu2 [196kB]
Hole:2 http://archive.ubuntu.com karmic/main libncurses5-dev 5.7+20090803-2ubuntu2 [1.564kB]
Hole:3 http://archive.ubuntu.com karmic/main libreadline5-dev 5.2-6 [231kB]     

[...]

Richte libsqlite3-dev ein (3.6.16-1ubuntu1) ...
Richte zlib1g-dev ein (1:1.2.3.3.dfsg-13ubuntu3) ...
Richte libssl-dev ein (0.9.8g-16ubuntu3) ...
Richte sqlite3 ein (3.6.16-1ubuntu1) ...
Richte libstdc++6-4.4-dev ein (4.4.1-4ubuntu8) ...
Richte g++-4.4 ein (4.4.1-4ubuntu8) ...
Richte g++ ein (4:4.4.1-1ubuntu2) ...
update-alternatives: Verwende /usr/bin/g++, um /usr/bin/c++ (c++) in Auto-Modus bereitzustellen.

Richte build-essential ein (11.4) ...
Paketlisten werden gelesen... Fertig             
Abhängigkeitsbaum wird aufgebaut       
Lese Status-Informationen ein... Fertig
Lese erweiterte Statusinformationen      
Initialisiere Paketstatus... Fertig
Schreibe erweiterte Statusinformationen... Fertig

ubuntu@ubuntu:~$</screen></para>

    <para>Jetzt überprüfen wir noch welche Ruby-Version installiert
    ist.<screen>ubuntu@ubuntu:~$ <command>ruby -v</command>
Die Anwendung »ruby« ist momentan nicht installiert.  Um sie zu installieren, können Sie Folgendes eingeben:
sudo apt-get install ruby
ruby: command not found
ubuntu@ubuntu:~$ </screen></para>

    <para>A-Ha! Natürlich ist noch keine installiert. Falls bei Ihnen eine
    andere Meldung erscheinen sollte, dann müssen Sie die überprüfen, ob Sie
    wirklich die Desktop-Variante gebootet haben.</para>

    <para>Alle anderen: Ein aktuelles (stable) Ruby 1.9 downloaden, entpacken
    und bauen. Je nach Rechenpower Ihres Systems, ist das wahrscheinlich auch
    eine gute Gelegenheit einen Kaffee zu kochen oder mit dem Hund spazieren
    zu gehen.<screen>ubuntu@ubuntu:~$ <command>cd /tmp/</command>
ubuntu@ubuntu:/tmp$ <command>wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.tar.gz</command>
--2009-12-30 20:47:25--  ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.tar.gz
           =&gt; `ruby-1.9.1-p376.tar.gz'
Auflösen des Hostnamen »ftp.ruby-lang.org«.... 221.186.184.68
Verbindungsaufbau zu ftp.ruby-lang.org|221.186.184.68|:21... verbunden.
Anmelden als anonymous ... Angemeldet!
==&gt; SYST ... fertig.    ==&gt; PWD ... fertig.
==&gt; TYPE I ... fertig.  ==&gt; CWD /pub/ruby/1.9 ... fertig.
==&gt; SIZE ruby-1.9.1-p376.tar.gz ... 9073007
==&gt; PASV ... fertig.    ==&gt; RETR ruby-1.9.1-p376.tar.gz ... fertig.
Länge: 9073007 (8,7M)

100%[======================================&gt;] 9.073.007    467K/s   in 99s     

2009-12-30 20:49:11 (89,2 KB/s) - »ruby-1.9.1-p376.tar.gz« gespeichert [9073007]

ubuntu@ubuntu:/tmp$ <command>tar xzf ruby-1.9.1-p376.tar.gz</command> 
ubuntu@ubuntu:/tmp$ <command>rm ruby-1.9.1-p376.tar.gz</command> 
ubuntu@ubuntu:/tmp$ <command>cd ruby-1.9.1-p376</command>
ubuntu@ubuntu:/tmp/ruby-1.9.1-p376$ <command>./configure &amp;&amp; make</command>
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking target system type... i686-pc-linux-gnu
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes

[...]

make[1]: Verlasse Verzeichnis '/tmp/ruby-1.9.1-p376/ext/zlib'
making ruby
make[1]: Betrete Verzeichnis '/tmp/ruby-1.9.1-p376'
gcc -O2 -g -Wall -Wno-parentheses  -L.  -rdynamic -Wl,-export-dynamic   main.o  -Wl,-R -Wl,/usr/local/lib -L/usr/local/lib -lruby-static -lpthread -lrt -ldl -lcrypt -lm   -o ruby
make[1]: Verlasse Verzeichnis '/tmp/ruby-1.9.1-p376'
ubuntu@ubuntu:/tmp/ruby-1.9.1-p376$ <command>sudo make install</command>
./miniruby -I./lib -I.ext/common -I./- -r./ext/purelib.rb  ./instruby.rb --make="make" --dest-dir="" --extout=".ext" --mflags="" --make-flags="" --data-mode=0644 --prog-mode=0755 --installed-list .installed.list --mantype="doc"
installing binary commands
installing command scripts
installing library scripts
installing headers

[...]

Generating RI...

Files:   512
Classes: 1353
Modules: 567
Methods: 7486
Elapsed: 62.7s
./miniruby -I./lib -I.ext/common -I./- -r./ext/purelib.rb  ./instruby.rb --make="make" --dest-dir="" --extout=".ext" --mflags="" --make-flags="" --data-mode=0644 --prog-mode=0755 --installed-list .installed.list --install=rdoc --rdoc-output=".ext/rdoc"
installing rdoc
ubuntu@ubuntu:/tmp/ruby-1.9.1-p376$ <command>cd ..</command>
ubuntu@ubuntu:/tmp$ <command>sudo rm -rf ruby-1.9.1-p376</command>
</screen></para>

    <para>Kurzer Check, ob Ruby 1.9 auch wirklich installiert wurde.<screen>ubuntu@ubuntu:/tmp$ <command>cd</command>
ubuntu@ubuntu:~$ <command>ruby -v</command>
ruby 1.9.1p376 (2009-12-07 revision 26041) [i686-linux]
ubuntu@ubuntu:~$</screen></para>

    <para>Ja, das sieht sehr gut aus. Jetzt führen wir für den Paketmanager
    <application>gem</application> (der ist ab Ruby 1.9 automatisch mit dabei)
    noch ein Update durch).<screen>ubuntu@ubuntu:~$ <command>sudo gem update --system</command>
Updating RubyGems
Updating rubygems-update
Successfully installed rubygems-update-1.3.5
:0:Warning: Gem::SourceIndex#search support for String patterns is deprecated
Updating RubyGems to 1.3.5
Installing RubyGems 1.3.5
RubyGems 1.3.5 installed

﻿=== 1.3.5 / 2009-07-21

Bug fixes:

* Fix use of prerelease gems.
* Gem.bin_path no longer escapes path with spaces. Bug #25935 and #26458.

Deprecation Notices:

* Bulk index update is no longer supported (the code currently remains, but not
  the tests)
* Gem::manage_gems was removed in 1.3.3.
* Time::today was removed in 1.3.3.


------------------------------------------------------------------------------

RubyGems installed the following executables:
 /usr/local/bin/gem

ubuntu@ubuntu:~$ </screen></para>

    <para>Danach benutzen wir <application>gem</application> zum Installieren
    von Rails. Benötigte andere Pakete werden dabei von
    <application>gem</application> automatisch mit installiert.<screen>ubuntu@ubuntu:~$ <command>sudo gem install rails</command>
Successfully installed rake-0.8.7
Successfully installed activesupport-2.3.5
Successfully installed activerecord-2.3.5
Successfully installed rack-1.0.1
Successfully installed actionpack-2.3.5
Successfully installed actionmailer-2.3.5
Successfully installed activeresource-2.3.5
Successfully installed rails-2.3.5
8 gems installed
Installing ri documentation for rake-0.8.7...
Installing ri documentation for activesupport-2.3.5...
Installing ri documentation for activerecord-2.3.5...
Installing ri documentation for rack-1.0.1...
Installing ri documentation for actionpack-2.3.5...
Installing ri documentation for actionmailer-2.3.5...
Installing ri documentation for activeresource-2.3.5...
Installing ri documentation for rails-2.3.5...
Updating class cache with 1513 classes...
Installing RDoc documentation for rake-0.8.7...
Installing RDoc documentation for activesupport-2.3.5...
Killed
ubuntu@ubuntu:~$</screen></para>

    <para>Und bevor wir es vergessen, installieren wir jetzt noch das Ruby-Gem
    um auf die <application>sqlite3</application> Datenbank zugreifen zu
    können.<screen>ubuntu@ubuntu:~$ <command>sudo gem install sqlite3-ruby</command>
Building native extensions.  This could take a while...
Successfully installed sqlite3-ruby-1.2.5
1 gem installed
Installing ri documentation for sqlite3-ruby-1.2.5...
Updating class cache with 2543 classes...
Installing RDoc documentation for sqlite3-ruby-1.2.5...
ubuntu@ubuntu:~$ </screen></para>

    <para>Das ging doch Ratz-Fatz! Um sicher zu gehen testen wir jetzt noch
    die Versionen:<screen>ubuntu@ubuntu:~$ <command>ruby -v</command>
ruby 1.9.1p376 (2009-12-07 revision 26041) [i686-linux]
ubuntu@ubuntu:~$ <command>rails -v</command>
Rails 2.3.5
ubuntu@ubuntu:~$</screen></para>

    <para>Fertig!</para>
  </section>

  <section>
    <title>Besonderheiten</title>

    <para>Im Rest des Buches wird als Installation ein Debian-Linux benutzt.
    Da Ubuntu auf Debian ausetzt, werden Sie keine Probleme haben. Allerdings
    müssen Sie drauf achten, das Sie bei Befehlen die im Debian System mit
    Root-Rechten ausgeführt werden sollen ein <command>sudo</command>
    voranstellen.</para>
  </section>
</section>
